/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.ifsul.cc.lpoo.cv.gui.funcionario;

import br.edu.ifsul.cc.lpoo.cv.Controle;
import br.edu.ifsul.cc.lpoo.cv.model.Funcionario;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author marina.ferreira
 */
public class JPanelFuncionarioListagem extends javax.swing.JPanel {

    private Controle controle;
    private JPanelFuncionario pnlFuncionario;
    private SimpleDateFormat format;

    /**
     * Creates new form JPanelFuncionarioListagem
     */
    public JPanelFuncionarioListagem() {
        initComponents();
    }

    public JPanelFuncionarioListagem(JPanelFuncionario pnlFuncionario, Controle controle) {

        this.pnlFuncionario = pnlFuncionario;
        this.controle = controle;
        initComponents();
        format = new SimpleDateFormat("dd/MM/yyyy");
    }

    public void populaTable() {

        DefaultTableModel model = (DefaultTableModel) tblListagem.getModel();//recuperacao do modelo da tabela

        model.setRowCount(0);//elimina as linhas existentes (reset na tabela)

        try {

            List<Funcionario> listFuncionarios = controle.getConexaoJDBC().listFuncionarios();
            for (Funcionario f : listFuncionarios) {

                model.addRow(new Object[]{f, format.format(f.getData_cadastro().getTime()), f.getData_nascimento(), f.getEndereco(), f.getCep()});
            }

        } catch (Exception ex) {

            JOptionPane.showMessageDialog(this, "Erro ao listar Funcionarios -:" + ex.getLocalizedMessage(), "Funcionario", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pnlFiltro = new javax.swing.JPanel();
        lblFiltro = new javax.swing.JLabel();
        txtfFiltro = new javax.swing.JTextField();
        btnFiltrar = new javax.swing.JButton();
        pnlCentro = new javax.swing.JPanel();
        scpRolagem = new javax.swing.JScrollPane();
        tblListagem = new javax.swing.JTable();
        pnlSul = new javax.swing.JPanel();
        btnNovo = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnRemover = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        jPanel1.setLayout(new java.awt.BorderLayout());

        lblFiltro.setText("Filtrar por CPF:");
        pnlFiltro.add(lblFiltro);

        txtfFiltro.setColumns(10);
        pnlFiltro.add(txtfFiltro);

        btnFiltrar.setText("Filtrar");
        btnFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrarActionPerformed(evt);
            }
        });
        pnlFiltro.add(btnFiltrar);

        jPanel1.add(pnlFiltro, java.awt.BorderLayout.PAGE_START);

        pnlCentro.setLayout(new java.awt.BorderLayout());

        tblListagem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nickname", "Data de Cadastro", "Data Último Login", "CEP"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scpRolagem.setViewportView(tblListagem);

        pnlCentro.add(scpRolagem, java.awt.BorderLayout.CENTER);

        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });
        pnlSul.add(btnNovo);

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        pnlSul.add(btnEditar);

        btnRemover.setText("Remover");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });
        pnlSul.add(btnRemover);

        jButton1.setText("Cancelar");
        pnlSul.add(jButton1);

        pnlCentro.add(pnlSul, java.awt.BorderLayout.PAGE_END);

        jPanel1.add(pnlCentro, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 773, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 160, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 160, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 518, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 109, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 109, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed

        pnlFuncionario.showTela("tela_funcionario_formulario");

        pnlFuncionario.getFormulario().setFuncionarioFormulario(null); //limpando o formulário.

        // TODO add your handling code here:
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed

        int indice = tblListagem.getSelectedRow();//recupera a linha selecionada
        if (indice > -1) {

            DefaultTableModel model = (DefaultTableModel) tblListagem.getModel(); //recuperacao do modelo da table

            Vector linha = (Vector) model.getDataVector().get(indice);//recupera o vetor de dados da linha selecionada

            Funcionario f = (Funcionario) linha.get(0); //model.addRow(new Object[]{u, u.getNome(), ...

            pnlFuncionario.showTela("tela_funcionario_formulario");
            pnlFuncionario.getFormulario().setFuncionarioFormulario(f);

        } else {
            JOptionPane.showMessageDialog(this, "Selecione uma linha para editar!", "Edição", JOptionPane.INFORMATION_MESSAGE);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed

        int indice = tblListagem.getSelectedRow();//recupera a linha selecionada
        if (indice > -1) {

            DefaultTableModel model = (DefaultTableModel) tblListagem.getModel(); //recuperacao do modelo da table

            Vector linha = (Vector) model.getDataVector().get(indice);//recupera o vetor de dados da linha selecionada

            Funcionario f = (Funcionario) linha.get(0); //model.addRow(new Object[]{u, u.getNome(), ...

            try {
                pnlFuncionario.getControle().getConexaoJDBC().remover(f);
                JOptionPane.showMessageDialog(this, "Jogador removido!", "Funcionario", JOptionPane.INFORMATION_MESSAGE);
                populaTable(); //refresh na tabela

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Erro ao remover Funcionario -:" + ex.getLocalizedMessage(), "Funcionario", JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
            }

        } else {
            JOptionPane.showMessageDialog(this, "Selecione uma linha para remover!", "Remoção", JOptionPane.INFORMATION_MESSAGE);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void btnFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltrarActionPerformed
        int indice = tblListagem.getSelectedRow();//recupera a linha selecionada
        if (indice > -1) {

            DefaultTableModel model = (DefaultTableModel) tblListagem.getModel(); //recuperacao do modelo da table

            Vector linha = (Vector) model.getDataVector().get(indice);//recupera o vetor de dados da linha selecionada

            Funcionario j = (Funcionario) linha.get(0); //model.addRow(new Object[]{u, u.getNome(), ...

            try {
                pnlFuncionario.getControle().getConexaoJDBC().remover(j);
                JOptionPane.showMessageDialog(this, "Funcionario removido!", "Funcionario", JOptionPane.INFORMATION_MESSAGE);
                populaTable(); //refresh na tabela

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Erro ao remover Funcionario -:" + ex.getLocalizedMessage(), "Funcionario", JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
            }

        } else {
            JOptionPane.showMessageDialog(this, "Selecione uma linha para remover!", "Remoção", JOptionPane.INFORMATION_MESSAGE);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnFiltrarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnFiltrar;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnRemover;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblFiltro;
    private javax.swing.JPanel pnlCentro;
    private javax.swing.JPanel pnlFiltro;
    private javax.swing.JPanel pnlSul;
    private javax.swing.JScrollPane scpRolagem;
    private javax.swing.JTable tblListagem;
    private javax.swing.JTextField txtfFiltro;
    // End of variables declaration//GEN-END:variables

}
